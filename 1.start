    method main@2: i#-4:int j#-8:int is_prime#-12:List
    global n#32764:int
    instr 1: nop
    instr 2: entrypc
    instr 3: enter 12
    instr 4: add n_base#32764 GP :int*
    instr 5: store 1000 (4)
    instr 6: add n_base#32764 GP :int*
    instr 7: load (6) (7)
    instr 8: newlist (7) :List
    instr 9: move (8) is_prime#-12
    instr 10: checknull is_prime#-12 :List
    instr 11: checkbounds (10) 0
    instr 12: add (10) 8 :dynamic*
    instr 13: mul 0 4 :int
    instr 14: add (12) (13) :dynamic*
    instr 15: new Integer_type#8 :Integer
    instr 16: add (15) value_offset#4 :int*
    instr 17: store 0 (16)
    instr 18: store (15) (14)
    instr 19: checknull is_prime#-12 :List
    instr 20: checkbounds (19) 1
    instr 21: add (19) 8 :dynamic*
    instr 22: mul 1 4 :int
    instr 23: add (21) (22) :dynamic*
    instr 24: new Integer_type#8 :Integer
    instr 25: add (24) value_offset#4 :int*
    instr 26: store 0 (25)
    instr 27: store (24) (23)
    instr 28: move 2 i#-4
    instr 29: add n_base#32764 GP :int*
    instr 30: load (29) (30)
    instr 31: cmplt i#-4 (30) :bool
    instr 32: blbc (31) [45]
    instr 33: checknull is_prime#-12 :List
    instr 34: checkbounds (33) i#-4
    instr 35: add (33) 8 :dynamic*
    instr 36: mul i#-4 4 :int
    instr 37: add (35) (36) :dynamic*
    instr 38: new Integer_type#8 :Integer
    instr 39: add (38) value_offset#4 :int*
    instr 40: store 1 (39)
    instr 41: store (38) (37)
    instr 42: add i#-4 1 :int
    instr 43: move (42) i#-4
    instr 44: br [29]
    instr 45: move 2 i#-4
    instr 46: add n_base#32764 GP :int*
    instr 47: load (46) (47)
    instr 48: cmplt i#-4 (47) :bool
    instr 49: blbc (48) [84]
    instr 50: checknull is_prime#-12 :List
    instr 51: checkbounds (50) i#-4
    instr 52: add (50) 8 :dynamic*
    instr 53: mul i#-4 4 :int
    instr 54: add (52) (53) :dynamic*
    instr 55: load (54) (55)
    instr 56: checknull (55) :dynamic
    instr 57: checktype (56) Integer_type#8 :Integer
    instr 58: add (57) value_offset#4 :int*
    instr 59: load (58) (59)
    instr 60: cmpeq (59) 0 :bool
    instr 61: blbc (60) [65]
    instr 62: add i#-4 1 :int
    instr 63: move (62) i#-4
    instr 64: br [46]
    instr 65: move 2 j#-8
    instr 66: mul i#-4 j#-8 :int
    instr 67: add n_base#32764 GP :int*
    instr 68: load (67) (65)
    instr 69: cmplt (66) (68) :bool
    instr 70: blbc (69) [62]
    instr 71: mul i#-4 j#-8 :int
    instr 72: checknull is_prime#-12 :List
    instr 73: checkbounds (72) (71)
    instr 74: add (72) 8 :dynamic*
    instr 75: mul (71) 4 :int
    instr 76: add (74) (75) :dynamic*
    instr 77: new Integer_type#8 :Integer
    instr 78: add (77) value_offset#4 :int*
    instr 79: store 0 (78)
    instr 80: store (77) (76)
    instr 81: add j#-8 1 :int
    instr 82: move (81) j#-8
    instr 83: br [66]
    instr 84: move 2 i#-4
    instr 85: add n_base#32764 GP :int*
    instr 86: load (85) (86)
    instr 87: cmplt i#-4 (86) :bool
    instr 88: blbc (87) [106]
    instr 89: checknull is_prime#-12 :List
    instr 90: checkbounds (89) i#-4
    instr 91: add (89) 8 :dynamic*
    instr 92: mul i#-4 4 :int
    instr 93: add (91) (92) :dynamic*
    instr 94: load (93) (94)
    instr 95: checknull (94) :dynamic
    instr 96: checktype (95) Integer_type#8 :Integer
    instr 97: add (96) value_offset#4 :int*
    instr 98: load (97) (98)
    instr 99: cmpeq (98) 0 :bool
    instr 100: blbc (99) [104]
    instr 101: add i#-4 1 :int
    instr 102: move (101) i#-4
    instr 103: br [85]
    instr 104: write i#-4
    instr 105: br [101]
    instr 106: wrl
    instr 107: ret 0
