    method cproptest1@2: j#-4:int
    method cproptest9@9: i#-4:int stop#-8:int j#-12:int
    method main@28:
    global data0#32764:int
    global data1#32760:int
    global data2#32756:int
    instr 1: nop
    instr 2: enter 4
    instr 3: mul 2 4 :int
    instr 4: add 1 (3) :int
    instr 5: move (4) j#-4
    instr 6: add data0_base#32764 GP :int*
    instr 7: store j#-4 (6)
    instr 8: ret 0
    instr 9: enter 12
    instr 10: add data0_base#32764 GP :int*
    instr 11: load (10) :int
    instr 12: move (11) stop#-8
    instr 13: move 21 j#-12
    instr 14: move 1 i#-4
    instr 15: cmplt i#-4 stop#-8 :bool
    instr 16: blbc (15) [23]
    instr 17: sub j#-12 20 :int
    instr 18: mul (17) 21 :int
    instr 19: move (18) j#-12
    instr 20: add i#-4 1 :int
    instr 21: move (20) i#-4
    instr 22: br [15]
    instr 23: add data1_base#32760 GP :int*
    instr 24: store j#-12 (23)
    instr 25: add data2_base#32756 GP :int*
    instr 26: store i#-4 (25)
    instr 27: ret 0
    instr 28: entrypc
    instr 29: enter 0
    instr 30: add data0_base#32764 GP :int*
    instr 31: store 0 (30)
    instr 32: call [2]
    instr 33: add data0_base#32764 GP :int*
    instr 34: load (33) :int
    instr 35: write (34)
    instr 36: wrl
    instr 37: add data1_base#32760 GP :int*
    instr 38: store 0 (37)
    instr 39: add data2_base#32756 GP :int*
    instr 40: store 0 (39)
    instr 41: call [9]
    instr 42: add data1_base#32760 GP :int*
    instr 43: load (42) :int
    instr 44: write (43)
    instr 45: add data2_base#32756 GP :int*
    instr 46: load (45) :int
    instr 47: write (46)
    instr 48: wrl
    instr 49: ret 0
    instr 50: nop

