    method alloc@2: m#12:int n#8:int i#-4:int
    method main@22: m1#-4:List m2#-8:List m3#-12:List i#-16:int j#-20:int k#-24:int
    global m#32764:int
    global n#32760:int
    global tmp#32756:List
    instr 1: nop
    instr 2: enter 4
    instr 3: newlist m#12 :List
    instr 4: add tmp_base#32756 GP :List*
    instr 5: store (3) (4)
    instr 6: move 0 i#-4
    instr 7: cmplt i#-4 m#12 :bool
    instr 8: blbc (7) [21]
    instr 9: add tmp_base#32756 GP :List*
    instr 10: load (9) :List
    instr 11: checknull (10) :List
    instr 12: checkbounds (11) i#-4
    instr 13: add (11) 8 :dynamic*
    instr 14: mul i#-4 4 :int
    instr 15: add (13) (14) :dynamic*
    instr 16: newlist n#8 :List
    instr 17: store (16) (15)
    instr 18: add i#-4 1 :int
    instr 19: move (18) i#-4
    instr 20: br [7]
    instr 21: ret 8
    instr 22: entrypc
    instr 23: enter 24
    instr 24: add m_base#32764 GP :int*
    instr 25: store 4 (24)
    instr 26: add n_base#32760 GP :int*
    instr 27: store 3 (26)
    instr 28: add m_base#32764 GP :int*
    instr 29: load (28) :int
    instr 30: param (29)
    instr 31: add n_base#32760 GP :int*
    instr 32: load (31) :int
    instr 33: param (32)
    instr 34: call [2]
    instr 35: add tmp_base#32756 GP :List*
    instr 36: load (35) :List
    instr 37: move (36) m1#-4
    instr 38: add n_base#32760 GP :int*
    instr 39: load (38) :int
    instr 40: param (39)
    instr 41: add m_base#32764 GP :int*
    instr 42: load (41) :int
    instr 43: param (42)
    instr 44: call [2]
    instr 45: add tmp_base#32756 GP :List*
    instr 46: load (45) :List
    instr 47: move (46) m2#-8
    instr 48: add n_base#32760 GP :int*
    instr 49: load (48) :int
    instr 50: param (49)
    instr 51: add n_base#32760 GP :int*
    instr 52: load (51) :int
    instr 53: param (52)
    instr 54: call [2]
    instr 55: add tmp_base#32756 GP :List*
    instr 56: load (55) :List
    instr 57: move (56) m3#-12
    instr 58: move 0 i#-16
    instr 59: add m_base#32764 GP :int*
    instr 60: load (59) :int
    instr 61: cmplt i#-16 (60) :bool
    instr 62: blbc (61) [96]
    instr 63: move 0 j#-20
    instr 64: add n_base#32760 GP :int*
    instr 65: load (64) :int
    instr 66: cmplt j#-20 (65) :bool
    instr 67: blbc (66) [92]
    instr 68: checknull m1#-4 :List
    instr 69: checkbounds (68) i#-16
    instr 70: add (68) 8 :dynamic*
    instr 71: mul i#-16 4 :int
    instr 72: add (70) (71) :dynamic*
    instr 73: load (72) :dynamic
    instr 74: checknull (73) :dynamic
    instr 75: checktype (74) List_type#4 :List
    instr 76: checkbounds (75) j#-20
    instr 77: add (75) 8 :dynamic*
    instr 78: mul j#-20 4 :int
    instr 79: add (77) (78) :dynamic*
    instr 80: mul j#-20 2 :int
    instr 81: add i#-16 (80) :int
    instr 82: new Integer_type#8 :Integer
    instr 83: add (82) value_offset#4 :int*
    instr 84: store (81) (83)
    instr 85: store (82) (79)
    instr 86: mul j#-20 2 :int
    instr 87: add i#-16 (86) :int
    instr 88: write (87)
    instr 89: add j#-20 1 :int
    instr 90: move (89) j#-20
    instr 91: br [64]
    instr 92: wrl
    instr 93: add i#-16 1 :int
    instr 94: move (93) i#-16
    instr 95: br [59]
    instr 96: move 0 i#-16
    instr 97: add m_base#32764 GP :int*
    instr 98: load (97) :int
    instr 99: cmplt i#-16 (98) :bool
    instr 100: blbc (99) [138]
    instr 101: move 0 j#-20
    instr 102: add n_base#32760 GP :int*
    instr 103: load (102) :int
    instr 104: cmplt j#-20 (103) :bool
    instr 105: blbc (104) [135]
    instr 106: checknull m2#-8 :List
    instr 107: checkbounds (106) j#-20
    instr 108: add (106) 8 :dynamic*
    instr 109: mul j#-20 4 :int
    instr 110: add (108) (109) :dynamic*
    instr 111: load (110) :dynamic
    instr 112: checknull (111) :dynamic
    instr 113: checktype (112) List_type#4 :List
    instr 114: checkbounds (113) i#-16
    instr 115: add (113) 8 :dynamic*
    instr 116: mul i#-16 4 :int
    instr 117: add (115) (116) :dynamic*
    instr 118: checknull m1#-4 :List
    instr 119: checkbounds (118) i#-16
    instr 120: add (118) 8 :dynamic*
    instr 121: mul i#-16 4 :int
    instr 122: add (120) (121) :dynamic*
    instr 123: load (122) :dynamic
    instr 124: checknull (123) :dynamic
    instr 125: checktype (124) List_type#4 :List
    instr 126: checkbounds (125) j#-20
    instr 127: add (125) 8 :dynamic*
    instr 128: mul j#-20 4 :int
    instr 129: add (127) (128) :dynamic*
    instr 130: load (129) :dynamic
    instr 131: store (130) (117)
    instr 132: add j#-20 1 :int
    instr 133: move (132) j#-20
    instr 134: br [102]
    instr 135: add i#-16 1 :int
    instr 136: move (135) i#-16
    instr 137: br [97]
    instr 138: wrl
    instr 139: move 0 i#-16
    instr 140: add n_base#32760 GP :int*
    instr 141: load (140) :int
    instr 142: cmplt i#-16 (141) :bool
    instr 143: blbc (142) [174]
    instr 144: move 0 j#-20
    instr 145: add m_base#32764 GP :int*
    instr 146: load (145) :int
    instr 147: cmplt j#-20 (146) :bool
    instr 148: blbc (147) [170]
    instr 149: checknull m2#-8 :List
    instr 150: checkbounds (149) i#-16
    instr 151: add (149) 8 :dynamic*
    instr 152: mul i#-16 4 :int
    instr 153: add (151) (152) :dynamic*
    instr 154: load (153) :dynamic
    instr 155: checknull (154) :dynamic
    instr 156: checktype (155) List_type#4 :List
    instr 157: checkbounds (156) j#-20
    instr 158: add (156) 8 :dynamic*
    instr 159: mul j#-20 4 :int
    instr 160: add (158) (159) :dynamic*
    instr 161: load (160) :dynamic
    instr 162: checknull (161) :dynamic
    instr 163: checktype (162) Integer_type#8 :Integer
    instr 164: add (163) value_offset#4 :int*
    instr 165: load (164) :int
    instr 166: write (165)
    instr 167: add j#-20 1 :int
    instr 168: move (167) j#-20
    instr 169: br [145]
    instr 170: wrl
    instr 171: add i#-16 1 :int
    instr 172: move (171) i#-16
    instr 173: br [140]
    instr 174: move 0 i#-16
    instr 175: add n_base#32760 GP :int*
    instr 176: load (175) :int
    instr 177: cmplt i#-16 (176) :bool
    instr 178: blbc (177) [206]
    instr 179: move 0 j#-20
    instr 180: add n_base#32760 GP :int*
    instr 181: load (180) :int
    instr 182: cmplt j#-20 (181) :bool
    instr 183: blbc (182) [203]
    instr 184: checknull m3#-12 :List
    instr 185: checkbounds (184) i#-16
    instr 186: add (184) 8 :dynamic*
    instr 187: mul i#-16 4 :int
    instr 188: add (186) (187) :dynamic*
    instr 189: load (188) :dynamic
    instr 190: checknull (189) :dynamic
    instr 191: checktype (190) List_type#4 :List
    instr 192: checkbounds (191) j#-20
    instr 193: add (191) 8 :dynamic*
    instr 194: mul j#-20 4 :int
    instr 195: add (193) (194) :dynamic*
    instr 196: new Integer_type#8 :Integer
    instr 197: add (196) value_offset#4 :int*
    instr 198: store 0 (197)
    instr 199: store (196) (195)
    instr 200: add j#-20 1 :int
    instr 201: move (200) j#-20
    instr 202: br [180]
    instr 203: add i#-16 1 :int
    instr 204: move (203) i#-16
    instr 205: br [175]
    instr 206: wrl
    instr 207: move 0 i#-16
    instr 208: add n_base#32760 GP :int*
    instr 209: load (208) :int
    instr 210: cmplt i#-16 (209) :bool
    instr 211: blbc (210) [300]
    instr 212: move 0 j#-20
    instr 213: add n_base#32760 GP :int*
    instr 214: load (213) :int
    instr 215: cmplt j#-20 (214) :bool
    instr 216: blbc (215) [297]
    instr 217: move 0 k#-24
    instr 218: add m_base#32764 GP :int*
    instr 219: load (218) :int
    instr 220: cmplt k#-24 (219) :bool
    instr 221: blbc (220) [294]
    instr 222: checknull m3#-12 :List
    instr 223: checkbounds (222) i#-16
    instr 224: add (222) 8 :dynamic*
    instr 225: mul i#-16 4 :int
    instr 226: add (224) (225) :dynamic*
    instr 227: load (226) :dynamic
    instr 228: checknull (227) :dynamic
    instr 229: checktype (228) List_type#4 :List
    instr 230: checkbounds (229) j#-20
    instr 231: add (229) 8 :dynamic*
    instr 232: mul j#-20 4 :int
    instr 233: add (231) (232) :dynamic*
    instr 234: checknull m3#-12 :List
    instr 235: checkbounds (234) i#-16
    instr 236: add (234) 8 :dynamic*
    instr 237: mul i#-16 4 :int
    instr 238: add (236) (237) :dynamic*
    instr 239: load (238) :dynamic
    instr 240: checknull (239) :dynamic
    instr 241: checktype (240) List_type#4 :List
    instr 242: checkbounds (241) j#-20
    instr 243: add (241) 8 :dynamic*
    instr 244: mul j#-20 4 :int
    instr 245: add (243) (244) :dynamic*
    instr 246: load (245) :dynamic
    instr 247: checknull m1#-4 :List
    instr 248: checkbounds (247) k#-24
    instr 249: add (247) 8 :dynamic*
    instr 250: mul k#-24 4 :int
    instr 251: add (249) (250) :dynamic*
    instr 252: load (251) :dynamic
    instr 253: checknull (252) :dynamic
    instr 254: checktype (253) List_type#4 :List
    instr 255: checkbounds (254) j#-20
    instr 256: add (254) 8 :dynamic*
    instr 257: mul j#-20 4 :int
    instr 258: add (256) (257) :dynamic*
    instr 259: load (258) :dynamic
    instr 260: checknull m2#-8 :List
    instr 261: checkbounds (260) i#-16
    instr 262: add (260) 8 :dynamic*
    instr 263: mul i#-16 4 :int
    instr 264: add (262) (263) :dynamic*
    instr 265: load (264) :dynamic
    instr 266: checknull (265) :dynamic
    instr 267: checktype (266) List_type#4 :List
    instr 268: checkbounds (267) k#-24
    instr 269: add (267) 8 :dynamic*
    instr 270: mul k#-24 4 :int
    instr 271: add (269) (270) :dynamic*
    instr 272: load (271) :dynamic
    instr 273: checknull (259) :dynamic
    instr 274: checktype (273) Integer_type#8 :Integer
    instr 275: add (274) value_offset#4 :int*
    instr 276: load (275) :int
    instr 277: checknull (272) :dynamic
    instr 278: checktype (277) Integer_type#8 :Integer
    instr 279: add (278) value_offset#4 :int*
    instr 280: load (279) :int
    instr 281: mul (276) (280) :int
    instr 282: checknull (246) :dynamic
    instr 283: checktype (282) Integer_type#8 :Integer
    instr 284: add (283) value_offset#4 :int*
    instr 285: load (284) :int
    instr 286: add (285) (281) :int
    instr 287: new Integer_type#8 :Integer
    instr 288: add (287) value_offset#4 :int*
    instr 289: store (286) (288)
    instr 290: store (287) (233)
    instr 291: add k#-24 1 :int
    instr 292: move (291) k#-24
    instr 293: br [218]
    instr 294: add j#-20 1 :int
    instr 295: move (294) j#-20
    instr 296: br [213]
    instr 297: add i#-16 1 :int
    instr 298: move (297) i#-16
    instr 299: br [208]
    instr 300: move 0 i#-16
    instr 301: add n_base#32760 GP :int*
    instr 302: load (301) :int
    instr 303: cmplt i#-16 (302) :bool
    instr 304: blbc (303) [335]
    instr 305: move 0 j#-20
    instr 306: add n_base#32760 GP :int*
    instr 307: load (306) :int
    instr 308: cmplt j#-20 (307) :bool
    instr 309: blbc (308) [331]
    instr 310: checknull m3#-12 :List
    instr 311: checkbounds (310) i#-16
    instr 312: add (310) 8 :dynamic*
    instr 313: mul i#-16 4 :int
    instr 314: add (312) (313) :dynamic*
    instr 315: load (314) :dynamic
    instr 316: checknull (315) :dynamic
    instr 317: checktype (316) List_type#4 :List
    instr 318: checkbounds (317) j#-20
    instr 319: add (317) 8 :dynamic*
    instr 320: mul j#-20 4 :int
    instr 321: add (319) (320) :dynamic*
    instr 322: load (321) :dynamic
    instr 323: checknull (322) :dynamic
    instr 324: checktype (323) Integer_type#8 :Integer
    instr 325: add (324) value_offset#4 :int*
    instr 326: load (325) :int
    instr 327: write (326)
    instr 328: add j#-20 1 :int
    instr 329: move (328) j#-20
    instr 330: br [306]
    instr 331: wrl
    instr 332: add i#-16 1 :int
    instr 333: move (332) i#-16
    instr 334: br [301]
    instr 335: ret 0
    instr 336: nop

